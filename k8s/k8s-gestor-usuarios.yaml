# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gestor-usuarios
  namespace: desarrollo
  # etiqueta de este deployment
  labels:
    app: gestor-usuarios
spec:
  replicas: 1
  selector:
    matchLabels:
      # debe hacer match con el label que tenga el deployment
      app: gestor-usuarios
  template:
    metadata:
      labels:
        # etiqueta asignada al pod, debe ser igual que el label del selector
        app: gestor-usuarios
    spec:
      containers:
        - name: gestor-usuarios
          image: localhost:5000/sport-app-gestor-usuarios:latest
          # capacidad de la máquina en ejecución normal y limite
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1024Mi"
              cpu: "500m"
          # variables de entorno
          env:
            - name: "VERSION"
              valueFrom:
                secretKeyRef:
                  name: gestor-usuarios-secrets
                  key: version
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: gestor-usuarios-secrets
                  key: db_user
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: gestor-usuarios-secrets
                  key: db_password
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: gestor-usuarios-secrets
                  key: db_host
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: gestor-usuarios-secrets
                  key: db_port
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: gestor-usuarios-secrets
                  key: db_name
          # puerto asignado al contenedor
          ports:
            - containerPort: 3000
          # ante cualquier cambio hacer siempre pull de la imagen
          imagePullPolicy: Always
          # LivenessProbe para verificar la salud del contenedor
          livenessProbe:
            httpGet:
              path: /gestor-usuarios/health/ping
              port: 3000
            initialDelaySeconds: 3
            periodSeconds: 60

---
# service
apiVersion: v1
kind: Service
metadata:
  name: gestor-usuarios-service
  namespace: desarrollo
spec:
  type: LoadBalancer
  selector:
    app: gestor-usuarios
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 3000

---
# ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gestor-usuarios-ingress
spec:
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: gestor-usuarios-service
                port:
                  number: 3000
